<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebUI</name>
    </assembly>
    <members>
        <member name="T:WebUI.Controllers.AuthorController">
            <summary>
            AuthorController
            </summary>
        </member>
        <member name="M:WebUI.Controllers.AuthorController.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            AuthorController constructor for initialisation ILogger
            </summary>
            <param name="loggerFactory"></param>
        </member>
        <member name="M:WebUI.Controllers.AuthorController.GetAllAuthorAsync(Application.Common.Pagging.Entities.BaseParameter)">
            <summary>
            Get list of Authors
            </summary>
            <returns>Returns list of Authors</returns>
        </member>
        <member name="M:WebUI.Controllers.AuthorController.GetAuthorByIdAsync(System.Guid)">
            <summary>
            Get Author by id
            </summary>
            <param name="id">Author id</param>
            <returns>Returns entity by id</returns>
        </member>
        <member name="M:WebUI.Controllers.AuthorController.CreateAuthorAsync(Application.Features.AuthorFeatures.Commands.CreateAuthor.CreateAuthorCommand)">
            <summary>
            Craete new Author
            </summary>
            <param name="command">Cteate command</param>
            <returns>Returns id created entity</returns>
        </member>
        <member name="M:WebUI.Controllers.AuthorController.UpdateAuthorAsync(Application.Features.AuthorFeatures.Commands.UpdateAuthor.UpdateAuthorCommand)">
            <summary>
            Update Author by id
            </summary>
            <param name="command">Update command</param>
            <returns>Returns id updated entity</returns>
        </member>
        <member name="M:WebUI.Controllers.AuthorController.DeleteAuthorAsync(System.Guid)">
            <summary>
            Delete Author by id
            </summary>
            <param name="id">Author Id</param>
            <returns>Return deleted entity id</returns>
        </member>
        <member name="T:WebUI.Controllers.BaseController">
            <summary>
            A base controller class with IMediator 
            </summary>
        </member>
        <member name="P:WebUI.Controllers.BaseController.Mediator">
            <summary>
            Defines a mediator to encapsulate request/response and publishing interaction patterns
            </summary>
        </member>
        <member name="M:WebUI.Controllers.BaseController.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Base constructor for initialisation ILogger
            </summary>
            <param name="loggerFactory"></param>
        </member>
        <member name="T:WebUI.Controllers.BookAuthorController">
            <summary>
            BookAuthorsAuthorController
            </summary>
        </member>
        <member name="M:WebUI.Controllers.BookAuthorController.GetAllBookAuthorsAsync">
            <summary>
            Get list of BookAuthors
            </summary>
            <returns>Returns list of BookAuthorsAuthors</returns>
        </member>
        <member name="M:WebUI.Controllers.BookAuthorController.GetBookAuthorsByIdAsync(System.Guid,System.Guid)">
            <summary>
            Get BookAuthor by ids
            </summary>
            <param name="bookId">Book Id</param>
            <param name="AuthorId">Author Id</param>
            <returns>Returns entity by id</returns>
        </member>
        <member name="M:WebUI.Controllers.BookAuthorController.CreateBookAuthorsAsync(Application.Features.BookAuthorFeatures.Commands.CreateBookAuthor.CreateBookAuthorCommand)">
            <summary>
            Craete new BookAuthor
            </summary>
            <param name="command">Cteate command</param>
            <returns>Returns ids created entity</returns>
        </member>
        <member name="M:WebUI.Controllers.BookAuthorController.UpdateBookAuthorsAsync(Application.Features.BookAuthorFeatures.Commands.UpdateBookAuthor.UpdateBookAuthorCommand)">
            <summary>
            Update BookAuthor by ids
            </summary>
            <param name="command">Update command</param>
            <returns>Returns ids updated entity</returns>
        </member>
        <member name="M:WebUI.Controllers.BookAuthorController.DeleteBookAuthorsAsync(System.Guid,System.Guid)">
            <summary>
            Delete BookAuthor by ids
            </summary>
            <param name="bookId">Book Id</param>
            <param name="AuthorId">Author Id</param>
            <returns>Return deleted entity ids</returns>
        </member>
        <member name="T:WebUI.Controllers.BookController">
            <summary>
            BookController
            </summary>
        </member>
        <member name="M:WebUI.Controllers.BookController.GetAllBookAsync">
            <summary>
            Get list of Books
            </summary>
            <returns>Returns list of Books</returns>
        </member>
        <member name="M:WebUI.Controllers.BookController.GetBookByIdAsync(System.Guid)">
            <summary>
            Get Book by id
            </summary>
            <param name="id">Book id</param>
            <returns>Returns entity by id</returns>
        </member>
        <member name="M:WebUI.Controllers.BookController.CreateBookAsync(Application.Features.BookFeatures.Commands.CreateBook.CreateBookCommand)">
            <summary>
            Craete new Book
            </summary>
            <param name="command">Cteate command</param>
            <returns>Returns id created entity</returns>
        </member>
        <member name="M:WebUI.Controllers.BookController.UpdateBookAsync(Application.Features.BookFeatures.Commands.UpdateBook.UpdateBookCommand)">
            <summary>
            Update Book by id
            </summary>
            <param name="command">Update command</param>
            <returns>Returns id updated entity</returns>
        </member>
        <member name="M:WebUI.Controllers.BookController.DeleteBookAsync(System.Guid)">
            <summary>
            Delete Book by id
            </summary>
            <param name="id">Book Id</param>
            <returns>Return deleted entity id</returns>
        </member>
        <member name="T:WebUI.Controllers.BookDetailsController">
            <summary>
            BookDetailsController
            </summary>
        </member>
        <member name="M:WebUI.Controllers.BookDetailsController.GetAllBookDetailsAsync">
            <summary>
            Get list of BookDetails
            </summary>
            <returns>Returns list of BookDetails</returns>
        </member>
        <member name="M:WebUI.Controllers.BookDetailsController.GetBookDetailsByIdAsync(System.Guid)">
            <summary>
            Get BookDetails by id
            </summary>
            <param name="id">BookDetails id</param>
            <returns>Returns entity by id</returns>
        </member>
        <member name="M:WebUI.Controllers.BookDetailsController.CreateBookDetailsAsync(Application.Features.BookDetailsFeatures.Commands.CreateBookDetails.CreateBookDetailsCommand)">
            <summary>
            Craete new BookDetails
            </summary>
            <param name="command">Cteate command</param>
            <returns>Returns id created entity</returns>
        </member>
        <member name="M:WebUI.Controllers.BookDetailsController.UpdateBookDetailsAsync(Application.Features.BookDetailsFeatures.Commands.UpdateBookDetails.UpdateBookDetailsCommand)">
            <summary>
            Update BookDetails by id
            </summary>
            <param name="command">Update command</param>
            <returns>Returns id updated entity</returns>
        </member>
        <member name="M:WebUI.Controllers.BookDetailsController.DeleteBookDetailsAsync(System.Guid)">
            <summary>
            Delete BookDetails by id
            </summary>
            <param name="id">BookDetails Id</param>
            <returns>Return deleted entity id</returns>
        </member>
        <member name="T:WebUI.Controllers.BookGenreController">
            <summary>
            BookGenresGenreController
            </summary>
        </member>
        <member name="M:WebUI.Controllers.BookGenreController.GetAllBookGenresAsync">
            <summary>
            Get list of BookGenres
            </summary>
            <returns>Returns list of BookGenresGenres</returns>
        </member>
        <member name="M:WebUI.Controllers.BookGenreController.GetBookGenresByIdAsync(System.Guid,System.Guid)">
            <summary>
            Get BookGenre by ids
            </summary>
            <param name="bookId">Book Id</param>
            <param name="genreId">Genre Id</param>
            <returns>Returns entity by id</returns>
        </member>
        <member name="M:WebUI.Controllers.BookGenreController.CreateBookGenresAsync(Application.Features.BookGenreFeatures.Commands.CreateBookGenre.CreateBookGenreCommand)">
            <summary>
            Craete new BookGenre
            </summary>
            <param name="command">Cteate command</param>
            <returns>Returns ids created entity</returns>
        </member>
        <member name="M:WebUI.Controllers.BookGenreController.UpdateBookGenresAsync(Application.Features.BookGenreFeatures.Commands.UpdateBookGenre.UpdateBookGenreCommand)">
            <summary>
            Update BookGenre by ids
            </summary>
            <param name="command">Update command</param>
            <returns>Returns ids updated entity</returns>
        </member>
        <member name="M:WebUI.Controllers.BookGenreController.DeleteBookGenresAsync(System.Guid,System.Guid)">
            <summary>
            Delete BookGenre by ids
            </summary>
            <param name="bookId">Book Id</param>
            <param name="genreId">Genre Id</param>
            <returns>Return deleted entity ids</returns>
        </member>
        <member name="T:WebUI.Controllers.GenreController">
            <summary>
            GenreController
            </summary>
        </member>
        <member name="M:WebUI.Controllers.GenreController.GetAllGenreAsync">
            <summary>
            Get list of Genres
            </summary>
            <returns>Returns list of Genres</returns>
        </member>
        <member name="M:WebUI.Controllers.GenreController.GetGenreByIdAsync(System.Guid)">
            <summary>
            Get Genre by id
            </summary>
            <param name="id">Genre id</param>
            <returns>Returns entity by id</returns>
        </member>
        <member name="M:WebUI.Controllers.GenreController.CreateGenreAsync(Application.Features.GenreFeatures.Commands.CreateGenre.CreateGenreCommand)">
            <summary>
            Craete new Genre
            </summary>
            <param name="command">Cteate command</param>
            <returns>Returns id created entity</returns>
        </member>
        <member name="M:WebUI.Controllers.GenreController.UpdateGenreAsync(Application.Features.GenreFeatures.Commands.UpdateGenre.UpdateGenreCommand)">
            <summary>
            Update Genre by id
            </summary>
            <param name="command">Update command</param>
            <returns>Returns id updated entity</returns>
        </member>
        <member name="M:WebUI.Controllers.GenreController.DeleteGenreAsync(System.Guid)">
            <summary>
            Delete Genre by id
            </summary>
            <param name="id">Genre Id</param>
            <returns>Return deleted entity id</returns>
        </member>
        <member name="T:WebUI.Controllers.LoanController">
            <summary>
            LoanController
            </summary>
        </member>
        <member name="M:WebUI.Controllers.LoanController.GetAllLoanAsync">
            <summary>
            Get list of Loans
            </summary>
            <returns>Returns list of Loans</returns>
        </member>
        <member name="M:WebUI.Controllers.LoanController.GetLoanByIdAsync(System.Guid)">
            <summary>
            Get Loan by id
            </summary>
            <param name="id">Loan id</param>
            <returns>Returns entity by id</returns>
        </member>
        <member name="M:WebUI.Controllers.LoanController.CreateLoanAsync(Application.Features.LoanFeatures.Commands.CreateLoan.CreateLoanCommand)">
            <summary>
            Craete new Loan
            </summary>
            <param name="command">Cteate command</param>
            <returns>Returns id created entity</returns>
        </member>
        <member name="M:WebUI.Controllers.LoanController.UpdateLoanAsync(Application.Features.LoanFeatures.Commands.UpdateLoan.UpdateLoanCommand)">
            <summary>
            Update Loan by id
            </summary>
            <param name="command">Update command</param>
            <returns>Returns id updated entity</returns>
        </member>
        <member name="M:WebUI.Controllers.LoanController.DeleteLoanAsync(System.Guid)">
            <summary>
            Delete Loan by id
            </summary>
            <param name="id">Loan Id</param>
            <returns>Return deleted entity id</returns>
        </member>
        <member name="T:WebUI.Controllers.PublisherController">
            <summary>
            PublisherController
            </summary>
        </member>
        <member name="M:WebUI.Controllers.PublisherController.GetAllPublisherAsync">
            <summary>
            Get list of Publishers
            </summary>
            <returns>Returns list of Publishers</returns>
        </member>
        <member name="M:WebUI.Controllers.PublisherController.GetPublisherByIdAsync(System.Guid)">
            <summary>
            Get Publisher by id
            </summary>
            <param name="id">Publisher id</param>
            <returns>Returns entity by id</returns>
        </member>
        <member name="M:WebUI.Controllers.PublisherController.CreatePublisherAsync(Application.Features.PublisherFeatures.Commands.CreatePublisher.CreatePublisherCommand)">
            <summary>
            Craete new Publisher
            </summary>
            <param name="command">Cteate command</param>
            <returns>Returns id created entity</returns>
        </member>
        <member name="M:WebUI.Controllers.PublisherController.UpdatePublisherAsync(Application.Features.PublisherFeatures.Commands.UpdatePublisher.UpdatePublisherCommand)">
            <summary>
            Update Publisher by id
            </summary>
            <param name="command">Update command</param>
            <returns>Returns id updated entity</returns>
        </member>
        <member name="M:WebUI.Controllers.PublisherController.DeletePublisherAsync(System.Guid)">
            <summary>
            Delete Publisher by id
            </summary>
            <param name="id">Publisher Id</param>
            <returns>Return deleted entity id</returns>
        </member>
        <member name="T:WebUI.Controllers.ReviewController">
            <summary>
            ReviewController
            </summary>
        </member>
        <member name="M:WebUI.Controllers.ReviewController.GetAllReviewAsync">
            <summary>
            Get list of Reviews
            </summary>
            <returns>Returns list of Reviews</returns>
        </member>
        <member name="M:WebUI.Controllers.ReviewController.GetReviewByIdAsync(System.Guid)">
            <summary>
            Get Review by id
            </summary>
            <param name="id">Review id</param>
            <returns>Returns entity by id</returns>
        </member>
        <member name="M:WebUI.Controllers.ReviewController.CreateReviewAsync(Application.Features.ReviewFeatures.Commands.CreateReview.CreateReviewCommand)">
            <summary>
            Craete new Review
            </summary>
            <param name="command">Cteate command</param>
            <returns>Returns id created entity</returns>
        </member>
        <member name="M:WebUI.Controllers.ReviewController.UpdateReviewAsync(Application.Features.ReviewFeatures.Commands.UpdateReview.UpdateReviewCommand)">
            <summary>
            Update Review by id
            </summary>
            <param name="command">Update command</param>
            <returns>Returns id updated entity</returns>
        </member>
        <member name="M:WebUI.Controllers.ReviewController.DeleteReviewAsync(System.Guid)">
            <summary>
            Delete Review by id
            </summary>
            <param name="id">Review Id</param>
            <returns>Return deleted entity id</returns>
        </member>
        <member name="T:WebUI.Controllers.UserController">
            <summary>
            UserController
            </summary>
        </member>
        <member name="M:WebUI.Controllers.UserController.GetAllUserAsync">
            <summary>
            Get list of Users
            </summary>
            <returns>Returns list of Users</returns>
        </member>
        <member name="M:WebUI.Controllers.UserController.GetUserByIdAsync(System.Guid)">
            <summary>
            Get User by id
            </summary>
            <param name="id">User id</param>
            <returns>Returns entity by id</returns>
        </member>
        <member name="M:WebUI.Controllers.UserController.CreateUserAsync(Application.Features.UserFeatures.Commands.CreateUser.CreateUserCommand)">
            <summary>
            Craete new User
            </summary>
            <param name="command">Cteate command</param>
            <returns>Returns id created entity</returns>
        </member>
        <member name="M:WebUI.Controllers.UserController.UpdateUserAsync(Application.Features.UserFeatures.Commands.UpdateUser.UpdateUserCommand)">
            <summary>
            Update User by id
            </summary>
            <param name="command">Update command</param>
            <returns>Returns id updated entity</returns>
        </member>
        <member name="M:WebUI.Controllers.UserController.DeleteUserAsync(System.Guid)">
            <summary>
            Delete User by id
            </summary>
            <param name="id">User Id</param>
            <returns>Return deleted entity id</returns>
        </member>
    </members>
</doc>
